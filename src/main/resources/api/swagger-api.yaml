swagger: "2.0"
info:
  description: "Cars store service"
  version: "1.0.0"
  title: "Swagger CarsStore"
host: "cars.store.com"
basePath: "/v1"
tags:
  - name: "car"
    description: "Everything related to cars"
schemes:
  - "http"
paths:
  /cars:
    post:
      tags:
        - "cars"
      summary: "Add a new car to the store"
      description: ""
      operationId: "addCar"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Car object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Car"
      responses:
        "400":
          description: "Invalid input"
  /cars/{carId}:
    parameters:
      - $ref: "#/parameters/carId"
    get:
      tags:
        - "car"
      summary: "Find car by ID"
      description: "Returns a single car"
      operationId: "getCarById"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Car"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Car not found"
    put:
      tags:
        - "car"
      summary: "Updates a car in the store with form data"
      description: ""
      operationId: "updateCar"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "400":
          description: "Invalid input"
    delete:
      tags:
        - "car"
      summary: "Deletes a car"
      description: ""
      operationId: "deleteCar"
      produces:
        - "application/json"
      parameters:
        - name: "carId"
          in: "path"
          description: "Car id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Car not found"
parameters:
  carId:
    in: path
    name: "carId"
    required: true
    type: integer
    format: int64
definitions:
  Car:
    type: "object"
    required:
      - "manufacturer"
      - "model"
    properties:
      id:
        type: "integer"
        format: "int64"
      manufacturer:
        type: "string"
        example: "Audi"
      model:
        type: "string"
        example: "A7"
